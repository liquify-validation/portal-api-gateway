name: Build and Release All

on:
  release:
    types: [published]

jobs:
  build:
    name: Build for ${{ matrix.ubuntu_version }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - ubuntu_version: 20_04
            runner: ubuntu-20.04
            output_name: api-gateway-20-04
            docker_image: ubuntu:20.04
          - ubuntu_version: 22_04
            runner: ubuntu-22.04
            output_name: api-gateway-22-04
            docker_image: ubuntu:22.04
          - ubuntu_version: 24_04
            runner: ubuntu-24.04
            output_name: api-gateway-24-04
            docker_image: ubuntu:24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version and git hash
        run: |
          echo "VERSION=$(git describe --tags --always --dirty)" >> $GITHUB_ENV
          echo "GIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build in Docker container (Ubuntu ${{ matrix.ubuntu_version }})
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app -w /app \
            --env VERSION=${{ env.VERSION }} \
            --env GIT_HASH=${{ env.GIT_HASH }} \
            ${{ matrix.docker_image }} /bin/bash -c '
              set -e
              export DEBIAN_FRONTEND=noninteractive
              apt update
              apt install -y wget git tzdata ca-certificates
              wget -q https://go.dev/dl/go1.24.3.linux-amd64.tar.gz
              rm -rf /usr/local/go
              tar -C /usr/local -xzf go1.24.3.linux-amd64.tar.gz
              export PATH=/usr/local/go/bin:$PATH
              go version
              cd src
              go build -buildvcs=false -ldflags "-X main.version=${VERSION} -X main.gitHash=${GIT_HASH}" -o ${{ matrix.output_name }}
            '

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: src/${{ matrix.output_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
